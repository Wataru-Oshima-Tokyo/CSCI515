Terminals unused in grammar

    T_ERROR


Grammar

    0 $accept: start_symbol $end

    1 start_symbol: expr

    2 expr: term
    3     | expr T_MINUS term
    4     | expr T_PLUS term

    5 term: factor
    6     | term T_DIVIDE factor
    7     | term T_MULTIPLY factor

    8 factor: primary
    9       | primary T_EXPONENT factor

   10 primary: T_INT_CONSTANT


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_INT_CONSTANT (258) 10
    T_PLUS (259) 4
    T_MINUS (260) 3
    T_MULTIPLY (261) 7
    T_DIVIDE (262) 6
    T_EXPONENT (263) 9
    T_ERROR (264)


Nonterminals, with rules where they appear

    $accept (10)
        on left: 0
    start_symbol (11)
        on left: 1
        on right: 0
    expr (12)
        on left: 2 3 4
        on right: 1 3 4
    term (13)
        on left: 5 6 7
        on right: 2 3 4 6 7
    factor (14)
        on left: 8 9
        on right: 5 6 7 9
    primary (15)
        on left: 10
        on right: 8 9


State 0

    0 $accept: . start_symbol $end

    T_INT_CONSTANT  shift, and go to state 1

    start_symbol  go to state 2
    expr          go to state 3
    term          go to state 4
    factor        go to state 5
    primary       go to state 6


State 1

   10 primary: T_INT_CONSTANT .

    $default  reduce using rule 10 (primary)


State 2

    0 $accept: start_symbol . $end

    $end  shift, and go to state 7


State 3

    1 start_symbol: expr .
    3 expr: expr . T_MINUS term
    4     | expr . T_PLUS term

    T_PLUS   shift, and go to state 8
    T_MINUS  shift, and go to state 9

    $default  reduce using rule 1 (start_symbol)


State 4

    2 expr: term .
    6 term: term . T_DIVIDE factor
    7     | term . T_MULTIPLY factor

    T_MULTIPLY  shift, and go to state 10
    T_DIVIDE    shift, and go to state 11

    $default  reduce using rule 2 (expr)


State 5

    5 term: factor .

    $default  reduce using rule 5 (term)


State 6

    8 factor: primary .
    9       | primary . T_EXPONENT factor

    T_EXPONENT  shift, and go to state 12

    $default  reduce using rule 8 (factor)


State 7

    0 $accept: start_symbol $end .

    $default  accept


State 8

    4 expr: expr T_PLUS . term

    T_INT_CONSTANT  shift, and go to state 1

    term     go to state 13
    factor   go to state 5
    primary  go to state 6


State 9

    3 expr: expr T_MINUS . term

    T_INT_CONSTANT  shift, and go to state 1

    term     go to state 14
    factor   go to state 5
    primary  go to state 6


State 10

    7 term: term T_MULTIPLY . factor

    T_INT_CONSTANT  shift, and go to state 1

    factor   go to state 15
    primary  go to state 6


State 11

    6 term: term T_DIVIDE . factor

    T_INT_CONSTANT  shift, and go to state 1

    factor   go to state 16
    primary  go to state 6


State 12

    9 factor: primary T_EXPONENT . factor

    T_INT_CONSTANT  shift, and go to state 1

    factor   go to state 17
    primary  go to state 6


State 13

    4 expr: expr T_PLUS term .
    6 term: term . T_DIVIDE factor
    7     | term . T_MULTIPLY factor

    T_MULTIPLY  shift, and go to state 10
    T_DIVIDE    shift, and go to state 11

    $default  reduce using rule 4 (expr)


State 14

    3 expr: expr T_MINUS term .
    6 term: term . T_DIVIDE factor
    7     | term . T_MULTIPLY factor

    T_MULTIPLY  shift, and go to state 10
    T_DIVIDE    shift, and go to state 11

    $default  reduce using rule 3 (expr)


State 15

    7 term: term T_MULTIPLY factor .

    $default  reduce using rule 7 (term)


State 16

    6 term: term T_DIVIDE factor .

    $default  reduce using rule 6 (term)


State 17

    9 factor: primary T_EXPONENT factor .

    $default  reduce using rule 9 (factor)
