// Set up system variables
int window_width = 500;
int window_height = 500;
int window_x = 300;
int window_y = 200;
string window_title = "gpl Invendors ver Wataru";
int animation_speed = 80; // 1 is slowest, 100 is fastest
int x =0;
// Set up some global variables
int alien_increment = 6;
int alien_y_increment = 0;
int bullet_increment = 17;
int counter = 0;
int i;
int count = 0;
int _myHP = 10;
int _enemyHP = 10;
// declare the animation handlers
forward animation lead_enemy_animate(triangle lead_enemy);
forward animation enemybullet_animate(rectangle enemy_bullet);
forward animation mybullet_animate(rectangle cur_bullet);
forward animation enemyhp_animate(textbox cur_text);
forward animation myhp_animate(textbox cur_text);
forward animation showResult(textbox cur_text);
// forward animation 
// create the circle objects that represent the aliens

// create the rectangles that represent the bullets
rectangle mybullets[5];
rectangle enemybullets[10];
// create the triangle that represents the gun
triangle gun(x = 250, y = 50, size = 25);
triangle enemy(x =window_width/2, y= window_height/2, size =25, rotation=180);
textbox myHP(x=10, y=10, text="Current HP: 100", size=0.1, red=1, animation_block=myhp_animate);
textbox enemyHP(x=370, y=480, text="Current HP: 100", size=0.1, blue=1, animation_block=enemyhp_animate);
textbox result(x=10, y=window_height/2, text="You WIN!!", size=0.5, blue=1, animation_block=showResult);

initialization
{
    for (i = 0; i < 5; i += 1)
    {
        mybullets[i].w = 2;
        mybullets[i].h = 20;
        mybullets[i].red = 0/255.0;
        mybullets[i].green = 255/255.0;
        mybullets[i].blue = 0/255.0;
        mybullets[i].visible = false;
        mybullets[i].animation_block = mybullet_animate;
    }

    for (i = 0; i < 10; i += 1)
    {
        enemybullets[i].w = 2;
        enemybullets[i].h = 20;
        enemybullets[i].red = 255/255.0;
        enemybullets[i].green = 0/255.0;
        enemybullets[i].blue = 0/255.0;
        enemybullets[i].visible = false;
        enemybullets[i].animation_block = enemybullet_animate;
    }


    gun.red = 0/255.0;
    gun.green = 0/255.0;
    gun.blue = 255/255.0;

    
    enemy.red = 255/255.0;
    enemy.green = 165/255.0;
    enemy.blue = 0/255.0;
    enemy.animation_block = lead_enemy_animate;

    result.visible  = false;

}



// the animation handler for the lead alien (all the others follow the lead)
animation lead_enemy_animate(triangle lead_enemy)
{
    if (count%5 == 0){
        lead_enemy.x  = random(475);
        lead_enemy.y  = 200 + random(250);
        if (lead_enemy.visible == true){
            for (i = 0; i < 10; i += 1)
            {
                if (enemybullets[i].visible == false)
                {
                    enemybullets[i].visible = true;
                    enemybullets[i].x = lead_enemy.x + lead_enemy.w/2;
                    enemybullets[i].y = lead_enemy.y;
                    i = 10; // break out of the loop
                }
            }

        }

    }
    count++;
    
}

// animation handler for all but the lead alien
animation enemybullet_animate(rectangle enemy_bullet)
{
    if (enemy_bullet.visible)
    {

        if (gun.visible == true && enemy_bullet touches gun)
        {
            // gun.visible = false;
            _myHP --;
            enemy_bullet.visible = false;
        }
        enemy_bullet.y -= bullet_increment;
        if (enemy_bullet.y < 0)
        enemy_bullet.visible = false;
    }
}

// animation handler for the bullets
// we assume that bullets are always active (very inefficient)
animation mybullet_animate(rectangle cur_bullet)
{
    if (cur_bullet.visible)
    {

        if (enemy.visible == true && cur_bullet touches enemy)
        {
            // enemy.visible = false;
            _enemyHP --;
            cur_bullet.visible = false;
        }

        cur_bullet.y += bullet_increment;
        if (cur_bullet.y > window_height)
        cur_bullet.visible = false;
    }
}



animation enemyhp_animate(textbox cur_text){
    cur_text.text = "Current HP: " + _enemyHP;
}

animation myhp_animate(textbox cur_text){
    cur_text.text = "Current HP: " + _myHP;
}

animation showResult(textbox cur_text){
    if (_myHP <=0 || _enemyHP <=0){
        for (i = 0; i < 10; i += 1)
        {
            if (i<5){
                mybullets[i].visible = false;
            }   
            enemybullets[i].visible = false;
        }
        gun.visible = false;
        enemy.visible = false;
        myHP.visible = false;
        enemyHP.visible = false;
        if (_myHP <=0)
            cur_text.text = "YOU LOSE...";
        else
            cur_text.text = "YOU WIN!!!";
        cur_text.visible = true;
    }
    
}

// input handlers for moving the gun
on leftarrow
{
    if (gun.x > 50)
        gun.x -= 20;
}
on rightarrow
{
    if (gun.x < window_width - 50)
        gun.x += 20;
}

on uparrow
{
    if (gun.y < 250)
        gun.y += 20;
}

on downarrow
{
    if (gun.y >50)
        gun.y -= 20;
}
// input handler for space which fires the gun
on space
{
    // find a bullet that isn't currently active
    for (i = 0; i < 5; i += 1)
    {
        if (mybullets[i].visible == false)
        {
            mybullets[i].visible = true;
            mybullets[i].x = gun.x + gun.w/2;
            mybullets[i].y = gun.y;
            i = 6; // break out of the loop
        }
    }
}
