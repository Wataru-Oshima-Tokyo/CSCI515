Terminals unused in grammar

    "error"


Rules useless in parser due to conflicts

   77 if_statement: "if" "(" expression ")" statement_or_block_of_statements "else" statement_or_block_of_statements


Grammar

    0 $accept: program $end

    1 program: declaration_list block_list

    2 declaration_list: declaration_list declaration
    3                 | ε

    4 declaration: variable_declaration ";"
    5            | object_declaration ";"
    6            | forward_declaration ";"

    7 variable_declaration: simple_type "identifier" optional_initializer
    8                     | simple_type "identifier" "[" expression "]"

    9 simple_type: "int"
   10            | "double"
   11            | "string"

   12 optional_initializer: "=" expression
   13                     | ε

   14 object_declaration: object_type "identifier" parameter_list_or_empty
   15                   | object_type "identifier" "[" expression "]"

   16 object_type: "triangle"
   17            | "pixmap"
   18            | "circle"
   19            | "rectangle"
   20            | "textbox"

   21 parameter_list_or_empty: "(" parameter_list ")"
   22                        | "(" ")"
   23                        | ε

   24 parameter_list: parameter_list "," parameter
   25               | parameter

   26 parameter: "identifier" "=" expression

   27 block_list: block_list block
   28           | ε

   29 block: initialization_block
   30      | termination_block
   31      | animation_block
   32      | on_block

   33 initialization_block: "initialization" statement_block

   34 termination_block: "termination" statement_block

   35 forward_declaration: "forward" "animation" "identifier" "(" animation_parameter ")"

   36 animation_parameter: object_type "identifier"
   37                    | object_type

   38 animation_block: animation_declaration statement_block

   39 animation_declaration: "animation" "identifier" "(" object_type "identifier" ")"

   40 on_block: "on" keystroke statement_block

   41 keystroke: "space"
   42          | "uparrow"
   43          | "downarrow"
   44          | "leftarrow"
   45          | "rightarrow"
   46          | "leftmouse_down"
   47          | "middlemouse_down"
   48          | "rightmouse_down"
   49          | "leftmouse_up"
   50          | "middlemouse_up"
   51          | "rightmouse_up"
   52          | "mouse_move"
   53          | "mouse_drag"
   54          | "akey"
   55          | "skey"
   56          | "dkey"
   57          | "fkey"
   58          | "hkey"
   59          | "jkey"
   60          | "kkey"
   61          | "lkey"
   62          | "wkey"
   63          | "zkey"
   64          | "f1"

   65 statement_or_block_of_statements: statement_block
   66                                 | statement

   67 statement_block: "{" statement_list "}"
   68                | "{" "}"

   69 statement_list: statement_list statement
   70               | statement

   71 statement: if_statement
   72          | for_statement
   73          | assign_statement ";"
   74          | print_statement ";"
   75          | exit_statement ";"

   76 if_statement: "if" "(" expression ")" statement_or_block_of_statements
   77             | "if" "(" expression ")" statement_or_block_of_statements "else" statement_or_block_of_statements

   78 for_statement: "for" "(" assign_statement_or_empty ";" expression ";" assign_statement_or_empty ")" statement_or_block_of_statements

   79 print_statement: "print" "(" expression ")"

   80 exit_statement: "exit" "(" expression ")"

   81 assign_statement_or_empty: assign_statement
   82                          | ε

   83 assign_statement: variable "=" expression
   84                 | variable "+=" expression
   85                 | variable "-=" expression
   86                 | variable "++"
   87                 | variable "--"

   88 variable: "identifier"
   89         | "identifier" "[" expression "]"
   90         | "identifier" "." "identifier"
   91         | "identifier" "[" expression "]" "." "identifier"

   92 expression: or_expr

   93 or_expr: and_expr
   94        | or_expr "||" and_expr

   95 and_expr: equality_expr
   96         | and_expr "&&" equality_expr

   97 equality_expr: relational_expr
   98              | equality_expr "==" relational_expr
   99              | equality_expr "!=" relational_expr

  100 relational_expr: add_sub_expr
  101                | relational_expr "<" add_sub_expr
  102                | relational_expr ">" add_sub_expr
  103                | relational_expr "<=" add_sub_expr
  104                | relational_expr ">=" add_sub_expr

  105 add_sub_expr: mul_div_mod_expr
  106             | add_sub_expr "+" mul_div_mod_expr
  107             | add_sub_expr "-" mul_div_mod_expr

  108 mul_div_mod_expr: not_expr
  109                 | mul_div_mod_expr "*" not_expr
  110                 | mul_div_mod_expr "/" not_expr
  111                 | mul_div_mod_expr "%" not_expr

  112 not_expr: unary_expr
  113         | "!" unary_expr

  114 unary_expr: primary_expression
  115           | "-" not_expr
  116           | primary_expression "touches" primary_expression
  117           | primary_expression "near" primary_expression

  118 primary_expression: "sin" "(" expression ")"
  119                   | "cos" "(" expression ")"
  120                   | "tan" "(" expression ")"
  121                   | "asin" "(" expression ")"
  122                   | "acos" "(" expression ")"
  123                   | "atan" "(" expression ")"
  124                   | "sqrt" "(" expression ")"
  125                   | "abs" "(" expression ")"
  126                   | "floor" "(" expression ")"
  127                   | "random" "(" expression ")"
  128                   | "(" expression ")"
  129                   | variable
  130                   | "int constant"
  131                   | "true"
  132                   | "false"
  133                   | "double constant"
  134                   | "string constant"


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    "int" (258) 9
    "double" (259) 10
    "string" (260) 11
    "triangle" (261) 16
    "pixmap" (262) 17
    "circle" (263) 18
    "rectangle" (264) 19
    "textbox" (265) 20
    "forward" (266) 35
    "initialization" (267) 33
    "termination" (268) 34
    "on" (269) 40
    "animation" (270) 35 39
    "if" (271) 76 77
    "for" (272) 78
    "else" (273) 77
    "exit" <union_int> (274) 80
    "print" <union_int> (275) 79
    "true" (276) 131
    "false" (277) 132
    "space" (278) 41
    "leftarrow" (279) 44
    "rightarrow" (280) 45
    "uparrow" (281) 42
    "downarrow" (282) 43
    "leftmouse_down" (283) 46
    "middlemouse_down" (284) 47
    "rightmouse_down" (285) 48
    "leftmouse_up" (286) 49
    "middlemouse_up" (287) 50
    "rightmouse_up" (288) 51
    "mouse_move" (289) 52
    "mouse_drag" (290) 53
    "f1" (291) 64
    "akey" (292) 54
    "skey" (293) 55
    "dkey" (294) 56
    "fkey" (295) 57
    "hkey" (296) 58
    "jkey" (297) 59
    "kkey" (298) 60
    "lkey" (299) 61
    "wkey" (300) 62
    "zkey" (301) 63
    "(" (302) 21 22 35 39 76 77 78 79 80 118 119 120 121 122 123 124 125 126 127 128
    ")" (303) 21 22 35 39 76 77 78 79 80 118 119 120 121 122 123 124 125 126 127 128
    "{" (304) 67 68
    "}" (305) 67 68
    "[" (306) 8 15 89 91
    "]" (307) 8 15 89 91
    ";" (308) 4 5 6 73 74 75 78
    "," (309) 24
    "." (310) 90 91
    "=" (311) 12 26 83
    "+=" (312) 84
    "-=" (313) 85
    "++" (314) 86
    "--" (315) 87
    "sin" (316) 118
    "cos" (317) 119
    "tan" (318) 120
    "asin" (319) 121
    "acos" (320) 122
    "atan" (321) 123
    "sqrt" (322) 124
    "abs" (323) 125
    "floor" (324) 126
    "random" (325) 127
    "touches" (326) 116
    "near" (327) 117
    "*" (328) 109
    "/" (329) 110
    "+" (330) 106
    "-" (331) 107 115
    "%" (332) 111
    "<" (333) 101
    ">" (334) 102
    "<=" (335) 103
    ">=" (336) 104
    "==" (337) 98
    "!=" (338) 99
    "!" (339) 113
    "&&" (340) 96
    "||" (341) 94
    "int constant" <union_int> (342) 130
    "double constant" <union_double> (343) 133
    "string constant" <union_string> (344) 134
    "identifier" <union_string> (345) 7 8 14 15 26 35 36 39 88 89 90 91
    "error" (346)
    T_IF_NO_ELSE (347)


Nonterminals, with rules where they appear

    $accept (93)
        on left: 0
    program (94)
        on left: 1
        on right: 0
    declaration_list (95)
        on left: 2 3
        on right: 1 2
    declaration (96)
        on left: 4 5 6
        on right: 2
    variable_declaration (97)
        on left: 7 8
        on right: 4
    simple_type <union_gpl_type> (98)
        on left: 9 10 11
        on right: 7 8
    optional_initializer <union_expression_ptr> (99)
        on left: 12 13
        on right: 7
    object_declaration (100)
        on left: 14 15
        on right: 5
    object_type <union_gpl_type> (101)
        on left: 16 17 18 19 20
        on right: 14 15 36 37 39
    parameter_list_or_empty <union_param_node_ptr> (102)
        on left: 21 22 23
        on right: 14
    parameter_list (103)
        on left: 24 25
        on right: 21 24
    parameter <union_param_node_ptr> (104)
        on left: 26
        on right: 24 25
    block_list (105)
        on left: 27 28
        on right: 1 27
    block (106)
        on left: 29 30 31 32
        on right: 27
    initialization_block (107)
        on left: 33
        on right: 29
    termination_block (108)
        on left: 34
        on right: 30
    forward_declaration (109)
        on left: 35
        on right: 6
    animation_parameter (110)
        on left: 36 37
        on right: 35
    animation_block (111)
        on left: 38
        on right: 31
    animation_declaration (112)
        on left: 39
        on right: 38
    on_block (113)
        on left: 40
        on right: 32
    keystroke (114)
        on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
        on right: 40
    statement_or_block_of_statements (115)
        on left: 65 66
        on right: 76 77 78
    statement_block (116)
        on left: 67 68
        on right: 33 34 38 40 65
    statement_list (117)
        on left: 69 70
        on right: 67 69
    statement (118)
        on left: 71 72 73 74 75
        on right: 66 69 70
    if_statement (119)
        on left: 76 77
        on right: 71
    for_statement (120)
        on left: 78
        on right: 72
    print_statement (121)
        on left: 79
        on right: 74
    exit_statement (122)
        on left: 80
        on right: 75
    assign_statement_or_empty (123)
        on left: 81 82
        on right: 78
    assign_statement (124)
        on left: 83 84 85 86 87
        on right: 73 81
    variable <union_variable_ptr> (125)
        on left: 88 89 90 91
        on right: 83 84 85 86 87 129
    expression <union_expression_ptr> (126)
        on left: 92
        on right: 8 12 15 26 76 77 78 79 80 83 84 85 89 91 118 119 120 121 122 123 124 125 126 127 128
    or_expr <union_expression_ptr> (127)
        on left: 93 94
        on right: 92 94
    and_expr <union_expression_ptr> (128)
        on left: 95 96
        on right: 93 94 96
    equality_expr <union_expression_ptr> (129)
        on left: 97 98 99
        on right: 95 96 98 99
    relational_expr <union_expression_ptr> (130)
        on left: 100 101 102 103 104
        on right: 97 98 99 101 102 103 104
    add_sub_expr <union_expression_ptr> (131)
        on left: 105 106 107
        on right: 100 101 102 103 104 106 107
    mul_div_mod_expr <union_expression_ptr> (132)
        on left: 108 109 110 111
        on right: 105 106 107 109 110 111
    not_expr <union_expression_ptr> (133)
        on left: 112 113
        on right: 108 109 110 111 115
    unary_expr <union_expression_ptr> (134)
        on left: 114 115 116 117
        on right: 112 113
    primary_expression <union_expression_ptr> (135)
        on left: 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134
        on right: 114 116 117


State 0

    0 $accept: • program $end

    $default  reduce using rule 3 (declaration_list)

    program           go to state 1
    declaration_list  go to state 2


State 1

    0 $accept: program • $end

    $end  shift, and go to state 3


State 2

    1 program: declaration_list • block_list
    2 declaration_list: declaration_list • declaration

    "int"        shift, and go to state 4
    "double"     shift, and go to state 5
    "string"     shift, and go to state 6
    "triangle"   shift, and go to state 7
    "pixmap"     shift, and go to state 8
    "circle"     shift, and go to state 9
    "rectangle"  shift, and go to state 10
    "textbox"    shift, and go to state 11
    "forward"    shift, and go to state 12

    $default  reduce using rule 28 (block_list)

    declaration           go to state 13
    variable_declaration  go to state 14
    simple_type           go to state 15
    object_declaration    go to state 16
    object_type           go to state 17
    block_list            go to state 18
    forward_declaration   go to state 19


State 3

    0 $accept: program $end •

    $default  accept


State 4

    9 simple_type: "int" •

    $default  reduce using rule 9 (simple_type)


State 5

   10 simple_type: "double" •

    $default  reduce using rule 10 (simple_type)


State 6

   11 simple_type: "string" •

    $default  reduce using rule 11 (simple_type)


State 7

   16 object_type: "triangle" •

    $default  reduce using rule 16 (object_type)


State 8

   17 object_type: "pixmap" •

    $default  reduce using rule 17 (object_type)


State 9

   18 object_type: "circle" •

    $default  reduce using rule 18 (object_type)


State 10

   19 object_type: "rectangle" •

    $default  reduce using rule 19 (object_type)


State 11

   20 object_type: "textbox" •

    $default  reduce using rule 20 (object_type)


State 12

   35 forward_declaration: "forward" • "animation" "identifier" "(" animation_parameter ")"

    "animation"  shift, and go to state 20


State 13

    2 declaration_list: declaration_list declaration •

    $default  reduce using rule 2 (declaration_list)


State 14

    4 declaration: variable_declaration • ";"

    ";"  shift, and go to state 21


State 15

    7 variable_declaration: simple_type • "identifier" optional_initializer
    8                     | simple_type • "identifier" "[" expression "]"

    "identifier"  shift, and go to state 22


State 16

    5 declaration: object_declaration • ";"

    ";"  shift, and go to state 23


State 17

   14 object_declaration: object_type • "identifier" parameter_list_or_empty
   15                   | object_type • "identifier" "[" expression "]"

    "identifier"  shift, and go to state 24


State 18

    1 program: declaration_list block_list •
   27 block_list: block_list • block

    "initialization"  shift, and go to state 25
    "termination"     shift, and go to state 26
    "on"              shift, and go to state 27
    "animation"       shift, and go to state 28

    $default  reduce using rule 1 (program)

    block                  go to state 29
    initialization_block   go to state 30
    termination_block      go to state 31
    animation_block        go to state 32
    animation_declaration  go to state 33
    on_block               go to state 34


State 19

    6 declaration: forward_declaration • ";"

    ";"  shift, and go to state 35


State 20

   35 forward_declaration: "forward" "animation" • "identifier" "(" animation_parameter ")"

    "identifier"  shift, and go to state 36


State 21

    4 declaration: variable_declaration ";" •

    $default  reduce using rule 4 (declaration)


State 22

    7 variable_declaration: simple_type "identifier" • optional_initializer
    8                     | simple_type "identifier" • "[" expression "]"

    "["  shift, and go to state 37
    "="  shift, and go to state 38

    $default  reduce using rule 13 (optional_initializer)

    optional_initializer  go to state 39


State 23

    5 declaration: object_declaration ";" •

    $default  reduce using rule 5 (declaration)


State 24

   14 object_declaration: object_type "identifier" • parameter_list_or_empty
   15                   | object_type "identifier" • "[" expression "]"

    "("  shift, and go to state 40
    "["  shift, and go to state 41

    $default  reduce using rule 23 (parameter_list_or_empty)

    parameter_list_or_empty  go to state 42


State 25

   33 initialization_block: "initialization" • statement_block

    "{"  shift, and go to state 43

    statement_block  go to state 44


State 26

   34 termination_block: "termination" • statement_block

    "{"  shift, and go to state 43

    statement_block  go to state 45


State 27

   40 on_block: "on" • keystroke statement_block

    "space"             shift, and go to state 46
    "leftarrow"         shift, and go to state 47
    "rightarrow"        shift, and go to state 48
    "uparrow"           shift, and go to state 49
    "downarrow"         shift, and go to state 50
    "leftmouse_down"    shift, and go to state 51
    "middlemouse_down"  shift, and go to state 52
    "rightmouse_down"   shift, and go to state 53
    "leftmouse_up"      shift, and go to state 54
    "middlemouse_up"    shift, and go to state 55
    "rightmouse_up"     shift, and go to state 56
    "mouse_move"        shift, and go to state 57
    "mouse_drag"        shift, and go to state 58
    "f1"                shift, and go to state 59
    "akey"              shift, and go to state 60
    "skey"              shift, and go to state 61
    "dkey"              shift, and go to state 62
    "fkey"              shift, and go to state 63
    "hkey"              shift, and go to state 64
    "jkey"              shift, and go to state 65
    "kkey"              shift, and go to state 66
    "lkey"              shift, and go to state 67
    "wkey"              shift, and go to state 68
    "zkey"              shift, and go to state 69

    keystroke  go to state 70


State 28

   39 animation_declaration: "animation" • "identifier" "(" object_type "identifier" ")"

    "identifier"  shift, and go to state 71


State 29

   27 block_list: block_list block •

    $default  reduce using rule 27 (block_list)


State 30

   29 block: initialization_block •

    $default  reduce using rule 29 (block)


State 31

   30 block: termination_block •

    $default  reduce using rule 30 (block)


State 32

   31 block: animation_block •

    $default  reduce using rule 31 (block)


State 33

   38 animation_block: animation_declaration • statement_block

    "{"  shift, and go to state 43

    statement_block  go to state 72


State 34

   32 block: on_block •

    $default  reduce using rule 32 (block)


State 35

    6 declaration: forward_declaration ";" •

    $default  reduce using rule 6 (declaration)


State 36

   35 forward_declaration: "forward" "animation" "identifier" • "(" animation_parameter ")"

    "("  shift, and go to state 73


State 37

    8 variable_declaration: simple_type "identifier" "[" • expression "]"

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 94
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 38

   12 optional_initializer: "=" • expression

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 104
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 39

    7 variable_declaration: simple_type "identifier" optional_initializer •

    $default  reduce using rule 7 (variable_declaration)


State 40

   21 parameter_list_or_empty: "(" • parameter_list ")"
   22                        | "(" • ")"

    ")"           shift, and go to state 105
    "identifier"  shift, and go to state 106

    parameter_list  go to state 107
    parameter       go to state 108


State 41

   15 object_declaration: object_type "identifier" "[" • expression "]"

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 109
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 42

   14 object_declaration: object_type "identifier" parameter_list_or_empty •

    $default  reduce using rule 14 (object_declaration)


State 43

   67 statement_block: "{" • statement_list "}"
   68                | "{" • "}"

    "if"          shift, and go to state 110
    "for"         shift, and go to state 111
    "exit"        shift, and go to state 112
    "print"       shift, and go to state 113
    "}"           shift, and go to state 114
    "identifier"  shift, and go to state 92

    statement_list    go to state 115
    statement         go to state 116
    if_statement      go to state 117
    for_statement     go to state 118
    print_statement   go to state 119
    exit_statement    go to state 120
    assign_statement  go to state 121
    variable          go to state 122


State 44

   33 initialization_block: "initialization" statement_block •

    $default  reduce using rule 33 (initialization_block)


State 45

   34 termination_block: "termination" statement_block •

    $default  reduce using rule 34 (termination_block)


State 46

   41 keystroke: "space" •

    $default  reduce using rule 41 (keystroke)


State 47

   44 keystroke: "leftarrow" •

    $default  reduce using rule 44 (keystroke)


State 48

   45 keystroke: "rightarrow" •

    $default  reduce using rule 45 (keystroke)


State 49

   42 keystroke: "uparrow" •

    $default  reduce using rule 42 (keystroke)


State 50

   43 keystroke: "downarrow" •

    $default  reduce using rule 43 (keystroke)


State 51

   46 keystroke: "leftmouse_down" •

    $default  reduce using rule 46 (keystroke)


State 52

   47 keystroke: "middlemouse_down" •

    $default  reduce using rule 47 (keystroke)


State 53

   48 keystroke: "rightmouse_down" •

    $default  reduce using rule 48 (keystroke)


State 54

   49 keystroke: "leftmouse_up" •

    $default  reduce using rule 49 (keystroke)


State 55

   50 keystroke: "middlemouse_up" •

    $default  reduce using rule 50 (keystroke)


State 56

   51 keystroke: "rightmouse_up" •

    $default  reduce using rule 51 (keystroke)


State 57

   52 keystroke: "mouse_move" •

    $default  reduce using rule 52 (keystroke)


State 58

   53 keystroke: "mouse_drag" •

    $default  reduce using rule 53 (keystroke)


State 59

   64 keystroke: "f1" •

    $default  reduce using rule 64 (keystroke)


State 60

   54 keystroke: "akey" •

    $default  reduce using rule 54 (keystroke)


State 61

   55 keystroke: "skey" •

    $default  reduce using rule 55 (keystroke)


State 62

   56 keystroke: "dkey" •

    $default  reduce using rule 56 (keystroke)


State 63

   57 keystroke: "fkey" •

    $default  reduce using rule 57 (keystroke)


State 64

   58 keystroke: "hkey" •

    $default  reduce using rule 58 (keystroke)


State 65

   59 keystroke: "jkey" •

    $default  reduce using rule 59 (keystroke)


State 66

   60 keystroke: "kkey" •

    $default  reduce using rule 60 (keystroke)


State 67

   61 keystroke: "lkey" •

    $default  reduce using rule 61 (keystroke)


State 68

   62 keystroke: "wkey" •

    $default  reduce using rule 62 (keystroke)


State 69

   63 keystroke: "zkey" •

    $default  reduce using rule 63 (keystroke)


State 70

   40 on_block: "on" keystroke • statement_block

    "{"  shift, and go to state 43

    statement_block  go to state 123


State 71

   39 animation_declaration: "animation" "identifier" • "(" object_type "identifier" ")"

    "("  shift, and go to state 124


State 72

   38 animation_block: animation_declaration statement_block •

    $default  reduce using rule 38 (animation_block)


State 73

   35 forward_declaration: "forward" "animation" "identifier" "(" • animation_parameter ")"

    "triangle"   shift, and go to state 7
    "pixmap"     shift, and go to state 8
    "circle"     shift, and go to state 9
    "rectangle"  shift, and go to state 10
    "textbox"    shift, and go to state 11

    object_type          go to state 125
    animation_parameter  go to state 126


State 74

  131 primary_expression: "true" •

    $default  reduce using rule 131 (primary_expression)


State 75

  132 primary_expression: "false" •

    $default  reduce using rule 132 (primary_expression)


State 76

  128 primary_expression: "(" • expression ")"

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 127
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 77

  118 primary_expression: "sin" • "(" expression ")"

    "("  shift, and go to state 128


State 78

  119 primary_expression: "cos" • "(" expression ")"

    "("  shift, and go to state 129


State 79

  120 primary_expression: "tan" • "(" expression ")"

    "("  shift, and go to state 130


State 80

  121 primary_expression: "asin" • "(" expression ")"

    "("  shift, and go to state 131


State 81

  122 primary_expression: "acos" • "(" expression ")"

    "("  shift, and go to state 132


State 82

  123 primary_expression: "atan" • "(" expression ")"

    "("  shift, and go to state 133


State 83

  124 primary_expression: "sqrt" • "(" expression ")"

    "("  shift, and go to state 134


State 84

  125 primary_expression: "abs" • "(" expression ")"

    "("  shift, and go to state 135


State 85

  126 primary_expression: "floor" • "(" expression ")"

    "("  shift, and go to state 136


State 86

  127 primary_expression: "random" • "(" expression ")"

    "("  shift, and go to state 137


State 87

  115 unary_expr: "-" • not_expr

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    not_expr            go to state 138
    unary_expr          go to state 102
    primary_expression  go to state 103


State 88

  113 not_expr: "!" • unary_expr

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    unary_expr          go to state 139
    primary_expression  go to state 103


State 89

  130 primary_expression: "int constant" •

    $default  reduce using rule 130 (primary_expression)


State 90

  133 primary_expression: "double constant" •

    $default  reduce using rule 133 (primary_expression)


State 91

  134 primary_expression: "string constant" •

    $default  reduce using rule 134 (primary_expression)


State 92

   88 variable: "identifier" •
   89         | "identifier" • "[" expression "]"
   90         | "identifier" • "." "identifier"
   91         | "identifier" • "[" expression "]" "." "identifier"

    "["  shift, and go to state 140
    "."  shift, and go to state 141

    $default  reduce using rule 88 (variable)


State 93

  129 primary_expression: variable •

    $default  reduce using rule 129 (primary_expression)


State 94

    8 variable_declaration: simple_type "identifier" "[" expression • "]"

    "]"  shift, and go to state 142


State 95

   92 expression: or_expr •
   94 or_expr: or_expr • "||" and_expr

    "||"  shift, and go to state 143

    $default  reduce using rule 92 (expression)


State 96

   93 or_expr: and_expr •
   96 and_expr: and_expr • "&&" equality_expr

    "&&"  shift, and go to state 144

    $default  reduce using rule 93 (or_expr)


State 97

   95 and_expr: equality_expr •
   98 equality_expr: equality_expr • "==" relational_expr
   99              | equality_expr • "!=" relational_expr

    "=="  shift, and go to state 145
    "!="  shift, and go to state 146

    $default  reduce using rule 95 (and_expr)


State 98

   97 equality_expr: relational_expr •
  101 relational_expr: relational_expr • "<" add_sub_expr
  102                | relational_expr • ">" add_sub_expr
  103                | relational_expr • "<=" add_sub_expr
  104                | relational_expr • ">=" add_sub_expr

    "<"   shift, and go to state 147
    ">"   shift, and go to state 148
    "<="  shift, and go to state 149
    ">="  shift, and go to state 150

    $default  reduce using rule 97 (equality_expr)


State 99

  100 relational_expr: add_sub_expr •
  106 add_sub_expr: add_sub_expr • "+" mul_div_mod_expr
  107             | add_sub_expr • "-" mul_div_mod_expr

    "+"  shift, and go to state 151
    "-"  shift, and go to state 152

    $default  reduce using rule 100 (relational_expr)


State 100

  105 add_sub_expr: mul_div_mod_expr •
  109 mul_div_mod_expr: mul_div_mod_expr • "*" not_expr
  110                 | mul_div_mod_expr • "/" not_expr
  111                 | mul_div_mod_expr • "%" not_expr

    "*"  shift, and go to state 153
    "/"  shift, and go to state 154
    "%"  shift, and go to state 155

    $default  reduce using rule 105 (add_sub_expr)


State 101

  108 mul_div_mod_expr: not_expr •

    $default  reduce using rule 108 (mul_div_mod_expr)


State 102

  112 not_expr: unary_expr •

    $default  reduce using rule 112 (not_expr)


State 103

  114 unary_expr: primary_expression •
  116           | primary_expression • "touches" primary_expression
  117           | primary_expression • "near" primary_expression

    "touches"  shift, and go to state 156
    "near"     shift, and go to state 157

    $default  reduce using rule 114 (unary_expr)


State 104

   12 optional_initializer: "=" expression •

    $default  reduce using rule 12 (optional_initializer)


State 105

   22 parameter_list_or_empty: "(" ")" •

    $default  reduce using rule 22 (parameter_list_or_empty)


State 106

   26 parameter: "identifier" • "=" expression

    "="  shift, and go to state 158


State 107

   21 parameter_list_or_empty: "(" parameter_list • ")"
   24 parameter_list: parameter_list • "," parameter

    ")"  shift, and go to state 159
    ","  shift, and go to state 160


State 108

   25 parameter_list: parameter •

    $default  reduce using rule 25 (parameter_list)


State 109

   15 object_declaration: object_type "identifier" "[" expression • "]"

    "]"  shift, and go to state 161


State 110

   76 if_statement: "if" • "(" expression ")" statement_or_block_of_statements
   77             | "if" • "(" expression ")" statement_or_block_of_statements "else" statement_or_block_of_statements

    "("  shift, and go to state 162


State 111

   78 for_statement: "for" • "(" assign_statement_or_empty ";" expression ";" assign_statement_or_empty ")" statement_or_block_of_statements

    "("  shift, and go to state 163


State 112

   80 exit_statement: "exit" • "(" expression ")"

    "("  shift, and go to state 164


State 113

   79 print_statement: "print" • "(" expression ")"

    "("  shift, and go to state 165


State 114

   68 statement_block: "{" "}" •

    $default  reduce using rule 68 (statement_block)


State 115

   67 statement_block: "{" statement_list • "}"
   69 statement_list: statement_list • statement

    "if"          shift, and go to state 110
    "for"         shift, and go to state 111
    "exit"        shift, and go to state 112
    "print"       shift, and go to state 113
    "}"           shift, and go to state 166
    "identifier"  shift, and go to state 92

    statement         go to state 167
    if_statement      go to state 117
    for_statement     go to state 118
    print_statement   go to state 119
    exit_statement    go to state 120
    assign_statement  go to state 121
    variable          go to state 122


State 116

   70 statement_list: statement •

    $default  reduce using rule 70 (statement_list)


State 117

   71 statement: if_statement •

    $default  reduce using rule 71 (statement)


State 118

   72 statement: for_statement •

    $default  reduce using rule 72 (statement)


State 119

   74 statement: print_statement • ";"

    ";"  shift, and go to state 168


State 120

   75 statement: exit_statement • ";"

    ";"  shift, and go to state 169


State 121

   73 statement: assign_statement • ";"

    ";"  shift, and go to state 170


State 122

   83 assign_statement: variable • "=" expression
   84                 | variable • "+=" expression
   85                 | variable • "-=" expression
   86                 | variable • "++"
   87                 | variable • "--"

    "="   shift, and go to state 171
    "+="  shift, and go to state 172
    "-="  shift, and go to state 173
    "++"  shift, and go to state 174
    "--"  shift, and go to state 175


State 123

   40 on_block: "on" keystroke statement_block •

    $default  reduce using rule 40 (on_block)


State 124

   39 animation_declaration: "animation" "identifier" "(" • object_type "identifier" ")"

    "triangle"   shift, and go to state 7
    "pixmap"     shift, and go to state 8
    "circle"     shift, and go to state 9
    "rectangle"  shift, and go to state 10
    "textbox"    shift, and go to state 11

    object_type  go to state 176


State 125

   36 animation_parameter: object_type • "identifier"
   37                    | object_type •

    "identifier"  shift, and go to state 177

    $default  reduce using rule 37 (animation_parameter)


State 126

   35 forward_declaration: "forward" "animation" "identifier" "(" animation_parameter • ")"

    ")"  shift, and go to state 178


State 127

  128 primary_expression: "(" expression • ")"

    ")"  shift, and go to state 179


State 128

  118 primary_expression: "sin" "(" • expression ")"

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 180
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 129

  119 primary_expression: "cos" "(" • expression ")"

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 181
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 130

  120 primary_expression: "tan" "(" • expression ")"

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 182
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 131

  121 primary_expression: "asin" "(" • expression ")"

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 183
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 132

  122 primary_expression: "acos" "(" • expression ")"

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 184
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 133

  123 primary_expression: "atan" "(" • expression ")"

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 185
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 134

  124 primary_expression: "sqrt" "(" • expression ")"

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 186
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 135

  125 primary_expression: "abs" "(" • expression ")"

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 187
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 136

  126 primary_expression: "floor" "(" • expression ")"

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 188
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 137

  127 primary_expression: "random" "(" • expression ")"

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 189
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 138

  115 unary_expr: "-" not_expr •

    $default  reduce using rule 115 (unary_expr)


State 139

  113 not_expr: "!" unary_expr •

    $default  reduce using rule 113 (not_expr)


State 140

   89 variable: "identifier" "[" • expression "]"
   91         | "identifier" "[" • expression "]" "." "identifier"

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 190
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 141

   90 variable: "identifier" "." • "identifier"

    "identifier"  shift, and go to state 191


State 142

    8 variable_declaration: simple_type "identifier" "[" expression "]" •

    $default  reduce using rule 8 (variable_declaration)


State 143

   94 or_expr: or_expr "||" • and_expr

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    and_expr            go to state 192
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 144

   96 and_expr: and_expr "&&" • equality_expr

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    equality_expr       go to state 193
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 145

   98 equality_expr: equality_expr "==" • relational_expr

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    relational_expr     go to state 194
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 146

   99 equality_expr: equality_expr "!=" • relational_expr

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    relational_expr     go to state 195
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 147

  101 relational_expr: relational_expr "<" • add_sub_expr

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    add_sub_expr        go to state 196
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 148

  102 relational_expr: relational_expr ">" • add_sub_expr

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    add_sub_expr        go to state 197
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 149

  103 relational_expr: relational_expr "<=" • add_sub_expr

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    add_sub_expr        go to state 198
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 150

  104 relational_expr: relational_expr ">=" • add_sub_expr

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    add_sub_expr        go to state 199
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 151

  106 add_sub_expr: add_sub_expr "+" • mul_div_mod_expr

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    mul_div_mod_expr    go to state 200
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 152

  107 add_sub_expr: add_sub_expr "-" • mul_div_mod_expr

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    mul_div_mod_expr    go to state 201
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 153

  109 mul_div_mod_expr: mul_div_mod_expr "*" • not_expr

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    not_expr            go to state 202
    unary_expr          go to state 102
    primary_expression  go to state 103


State 154

  110 mul_div_mod_expr: mul_div_mod_expr "/" • not_expr

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    not_expr            go to state 203
    unary_expr          go to state 102
    primary_expression  go to state 103


State 155

  111 mul_div_mod_expr: mul_div_mod_expr "%" • not_expr

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    not_expr            go to state 204
    unary_expr          go to state 102
    primary_expression  go to state 103


State 156

  116 unary_expr: primary_expression "touches" • primary_expression

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    primary_expression  go to state 205


State 157

  117 unary_expr: primary_expression "near" • primary_expression

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    primary_expression  go to state 206


State 158

   26 parameter: "identifier" "=" • expression

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 207
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 159

   21 parameter_list_or_empty: "(" parameter_list ")" •

    $default  reduce using rule 21 (parameter_list_or_empty)


State 160

   24 parameter_list: parameter_list "," • parameter

    "identifier"  shift, and go to state 106

    parameter  go to state 208


State 161

   15 object_declaration: object_type "identifier" "[" expression "]" •

    $default  reduce using rule 15 (object_declaration)


State 162

   76 if_statement: "if" "(" • expression ")" statement_or_block_of_statements
   77             | "if" "(" • expression ")" statement_or_block_of_statements "else" statement_or_block_of_statements

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 209
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 163

   78 for_statement: "for" "(" • assign_statement_or_empty ";" expression ";" assign_statement_or_empty ")" statement_or_block_of_statements

    "identifier"  shift, and go to state 92

    $default  reduce using rule 82 (assign_statement_or_empty)

    assign_statement_or_empty  go to state 210
    assign_statement           go to state 211
    variable                   go to state 122


State 164

   80 exit_statement: "exit" "(" • expression ")"

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 212
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 165

   79 print_statement: "print" "(" • expression ")"

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 213
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 166

   67 statement_block: "{" statement_list "}" •

    $default  reduce using rule 67 (statement_block)


State 167

   69 statement_list: statement_list statement •

    $default  reduce using rule 69 (statement_list)


State 168

   74 statement: print_statement ";" •

    $default  reduce using rule 74 (statement)


State 169

   75 statement: exit_statement ";" •

    $default  reduce using rule 75 (statement)


State 170

   73 statement: assign_statement ";" •

    $default  reduce using rule 73 (statement)


State 171

   83 assign_statement: variable "=" • expression

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 214
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 172

   84 assign_statement: variable "+=" • expression

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 215
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 173

   85 assign_statement: variable "-=" • expression

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 216
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 174

   86 assign_statement: variable "++" •

    $default  reduce using rule 86 (assign_statement)


State 175

   87 assign_statement: variable "--" •

    $default  reduce using rule 87 (assign_statement)


State 176

   39 animation_declaration: "animation" "identifier" "(" object_type • "identifier" ")"

    "identifier"  shift, and go to state 217


State 177

   36 animation_parameter: object_type "identifier" •

    $default  reduce using rule 36 (animation_parameter)


State 178

   35 forward_declaration: "forward" "animation" "identifier" "(" animation_parameter ")" •

    $default  reduce using rule 35 (forward_declaration)


State 179

  128 primary_expression: "(" expression ")" •

    $default  reduce using rule 128 (primary_expression)


State 180

  118 primary_expression: "sin" "(" expression • ")"

    ")"  shift, and go to state 218


State 181

  119 primary_expression: "cos" "(" expression • ")"

    ")"  shift, and go to state 219


State 182

  120 primary_expression: "tan" "(" expression • ")"

    ")"  shift, and go to state 220


State 183

  121 primary_expression: "asin" "(" expression • ")"

    ")"  shift, and go to state 221


State 184

  122 primary_expression: "acos" "(" expression • ")"

    ")"  shift, and go to state 222


State 185

  123 primary_expression: "atan" "(" expression • ")"

    ")"  shift, and go to state 223


State 186

  124 primary_expression: "sqrt" "(" expression • ")"

    ")"  shift, and go to state 224


State 187

  125 primary_expression: "abs" "(" expression • ")"

    ")"  shift, and go to state 225


State 188

  126 primary_expression: "floor" "(" expression • ")"

    ")"  shift, and go to state 226


State 189

  127 primary_expression: "random" "(" expression • ")"

    ")"  shift, and go to state 227


State 190

   89 variable: "identifier" "[" expression • "]"
   91         | "identifier" "[" expression • "]" "." "identifier"

    "]"  shift, and go to state 228


State 191

   90 variable: "identifier" "." "identifier" •

    $default  reduce using rule 90 (variable)


State 192

   94 or_expr: or_expr "||" and_expr •
   96 and_expr: and_expr • "&&" equality_expr

    "&&"  shift, and go to state 144

    $default  reduce using rule 94 (or_expr)


State 193

   96 and_expr: and_expr "&&" equality_expr •
   98 equality_expr: equality_expr • "==" relational_expr
   99              | equality_expr • "!=" relational_expr

    "=="  shift, and go to state 145
    "!="  shift, and go to state 146

    $default  reduce using rule 96 (and_expr)


State 194

   98 equality_expr: equality_expr "==" relational_expr •
  101 relational_expr: relational_expr • "<" add_sub_expr
  102                | relational_expr • ">" add_sub_expr
  103                | relational_expr • "<=" add_sub_expr
  104                | relational_expr • ">=" add_sub_expr

    "<"   shift, and go to state 147
    ">"   shift, and go to state 148
    "<="  shift, and go to state 149
    ">="  shift, and go to state 150

    $default  reduce using rule 98 (equality_expr)


State 195

   99 equality_expr: equality_expr "!=" relational_expr •
  101 relational_expr: relational_expr • "<" add_sub_expr
  102                | relational_expr • ">" add_sub_expr
  103                | relational_expr • "<=" add_sub_expr
  104                | relational_expr • ">=" add_sub_expr

    "<"   shift, and go to state 147
    ">"   shift, and go to state 148
    "<="  shift, and go to state 149
    ">="  shift, and go to state 150

    $default  reduce using rule 99 (equality_expr)


State 196

  101 relational_expr: relational_expr "<" add_sub_expr •
  106 add_sub_expr: add_sub_expr • "+" mul_div_mod_expr
  107             | add_sub_expr • "-" mul_div_mod_expr

    "+"  shift, and go to state 151
    "-"  shift, and go to state 152

    $default  reduce using rule 101 (relational_expr)


State 197

  102 relational_expr: relational_expr ">" add_sub_expr •
  106 add_sub_expr: add_sub_expr • "+" mul_div_mod_expr
  107             | add_sub_expr • "-" mul_div_mod_expr

    "+"  shift, and go to state 151
    "-"  shift, and go to state 152

    $default  reduce using rule 102 (relational_expr)


State 198

  103 relational_expr: relational_expr "<=" add_sub_expr •
  106 add_sub_expr: add_sub_expr • "+" mul_div_mod_expr
  107             | add_sub_expr • "-" mul_div_mod_expr

    "+"  shift, and go to state 151
    "-"  shift, and go to state 152

    $default  reduce using rule 103 (relational_expr)


State 199

  104 relational_expr: relational_expr ">=" add_sub_expr •
  106 add_sub_expr: add_sub_expr • "+" mul_div_mod_expr
  107             | add_sub_expr • "-" mul_div_mod_expr

    "+"  shift, and go to state 151
    "-"  shift, and go to state 152

    $default  reduce using rule 104 (relational_expr)


State 200

  106 add_sub_expr: add_sub_expr "+" mul_div_mod_expr •
  109 mul_div_mod_expr: mul_div_mod_expr • "*" not_expr
  110                 | mul_div_mod_expr • "/" not_expr
  111                 | mul_div_mod_expr • "%" not_expr

    "*"  shift, and go to state 153
    "/"  shift, and go to state 154
    "%"  shift, and go to state 155

    $default  reduce using rule 106 (add_sub_expr)


State 201

  107 add_sub_expr: add_sub_expr "-" mul_div_mod_expr •
  109 mul_div_mod_expr: mul_div_mod_expr • "*" not_expr
  110                 | mul_div_mod_expr • "/" not_expr
  111                 | mul_div_mod_expr • "%" not_expr

    "*"  shift, and go to state 153
    "/"  shift, and go to state 154
    "%"  shift, and go to state 155

    $default  reduce using rule 107 (add_sub_expr)


State 202

  109 mul_div_mod_expr: mul_div_mod_expr "*" not_expr •

    $default  reduce using rule 109 (mul_div_mod_expr)


State 203

  110 mul_div_mod_expr: mul_div_mod_expr "/" not_expr •

    $default  reduce using rule 110 (mul_div_mod_expr)


State 204

  111 mul_div_mod_expr: mul_div_mod_expr "%" not_expr •

    $default  reduce using rule 111 (mul_div_mod_expr)


State 205

  116 unary_expr: primary_expression "touches" primary_expression •

    $default  reduce using rule 116 (unary_expr)


State 206

  117 unary_expr: primary_expression "near" primary_expression •

    $default  reduce using rule 117 (unary_expr)


State 207

   26 parameter: "identifier" "=" expression •

    $default  reduce using rule 26 (parameter)


State 208

   24 parameter_list: parameter_list "," parameter •

    $default  reduce using rule 24 (parameter_list)


State 209

   76 if_statement: "if" "(" expression • ")" statement_or_block_of_statements
   77             | "if" "(" expression • ")" statement_or_block_of_statements "else" statement_or_block_of_statements

    ")"  shift, and go to state 229


State 210

   78 for_statement: "for" "(" assign_statement_or_empty • ";" expression ";" assign_statement_or_empty ")" statement_or_block_of_statements

    ";"  shift, and go to state 230


State 211

   81 assign_statement_or_empty: assign_statement •

    $default  reduce using rule 81 (assign_statement_or_empty)


State 212

   80 exit_statement: "exit" "(" expression • ")"

    ")"  shift, and go to state 231


State 213

   79 print_statement: "print" "(" expression • ")"

    ")"  shift, and go to state 232


State 214

   83 assign_statement: variable "=" expression •

    $default  reduce using rule 83 (assign_statement)


State 215

   84 assign_statement: variable "+=" expression •

    $default  reduce using rule 84 (assign_statement)


State 216

   85 assign_statement: variable "-=" expression •

    $default  reduce using rule 85 (assign_statement)


State 217

   39 animation_declaration: "animation" "identifier" "(" object_type "identifier" • ")"

    ")"  shift, and go to state 233


State 218

  118 primary_expression: "sin" "(" expression ")" •

    $default  reduce using rule 118 (primary_expression)


State 219

  119 primary_expression: "cos" "(" expression ")" •

    $default  reduce using rule 119 (primary_expression)


State 220

  120 primary_expression: "tan" "(" expression ")" •

    $default  reduce using rule 120 (primary_expression)


State 221

  121 primary_expression: "asin" "(" expression ")" •

    $default  reduce using rule 121 (primary_expression)


State 222

  122 primary_expression: "acos" "(" expression ")" •

    $default  reduce using rule 122 (primary_expression)


State 223

  123 primary_expression: "atan" "(" expression ")" •

    $default  reduce using rule 123 (primary_expression)


State 224

  124 primary_expression: "sqrt" "(" expression ")" •

    $default  reduce using rule 124 (primary_expression)


State 225

  125 primary_expression: "abs" "(" expression ")" •

    $default  reduce using rule 125 (primary_expression)


State 226

  126 primary_expression: "floor" "(" expression ")" •

    $default  reduce using rule 126 (primary_expression)


State 227

  127 primary_expression: "random" "(" expression ")" •

    $default  reduce using rule 127 (primary_expression)


State 228

   89 variable: "identifier" "[" expression "]" •
   91         | "identifier" "[" expression "]" • "." "identifier"

    "."  shift, and go to state 234

    $default  reduce using rule 89 (variable)


State 229

   76 if_statement: "if" "(" expression ")" • statement_or_block_of_statements
   77             | "if" "(" expression ")" • statement_or_block_of_statements "else" statement_or_block_of_statements

    "if"          shift, and go to state 110
    "for"         shift, and go to state 111
    "exit"        shift, and go to state 112
    "print"       shift, and go to state 113
    "{"           shift, and go to state 43
    "identifier"  shift, and go to state 92

    statement_or_block_of_statements  go to state 235
    statement_block                   go to state 236
    statement                         go to state 237
    if_statement                      go to state 117
    for_statement                     go to state 118
    print_statement                   go to state 119
    exit_statement                    go to state 120
    assign_statement                  go to state 121
    variable                          go to state 122


State 230

   78 for_statement: "for" "(" assign_statement_or_empty ";" • expression ";" assign_statement_or_empty ")" statement_or_block_of_statements

    "true"             shift, and go to state 74
    "false"            shift, and go to state 75
    "("                shift, and go to state 76
    "sin"              shift, and go to state 77
    "cos"              shift, and go to state 78
    "tan"              shift, and go to state 79
    "asin"             shift, and go to state 80
    "acos"             shift, and go to state 81
    "atan"             shift, and go to state 82
    "sqrt"             shift, and go to state 83
    "abs"              shift, and go to state 84
    "floor"            shift, and go to state 85
    "random"           shift, and go to state 86
    "-"                shift, and go to state 87
    "!"                shift, and go to state 88
    "int constant"     shift, and go to state 89
    "double constant"  shift, and go to state 90
    "string constant"  shift, and go to state 91
    "identifier"       shift, and go to state 92

    variable            go to state 93
    expression          go to state 238
    or_expr             go to state 95
    and_expr            go to state 96
    equality_expr       go to state 97
    relational_expr     go to state 98
    add_sub_expr        go to state 99
    mul_div_mod_expr    go to state 100
    not_expr            go to state 101
    unary_expr          go to state 102
    primary_expression  go to state 103


State 231

   80 exit_statement: "exit" "(" expression ")" •

    $default  reduce using rule 80 (exit_statement)


State 232

   79 print_statement: "print" "(" expression ")" •

    $default  reduce using rule 79 (print_statement)


State 233

   39 animation_declaration: "animation" "identifier" "(" object_type "identifier" ")" •

    $default  reduce using rule 39 (animation_declaration)


State 234

   91 variable: "identifier" "[" expression "]" "." • "identifier"

    "identifier"  shift, and go to state 239


State 235

   76 if_statement: "if" "(" expression ")" statement_or_block_of_statements •
   77             | "if" "(" expression ")" statement_or_block_of_statements • "else" statement_or_block_of_statements

    $default  reduce using rule 76 (if_statement)


State 236

   65 statement_or_block_of_statements: statement_block •

    $default  reduce using rule 65 (statement_or_block_of_statements)


State 237

   66 statement_or_block_of_statements: statement •

    $default  reduce using rule 66 (statement_or_block_of_statements)


State 238

   78 for_statement: "for" "(" assign_statement_or_empty ";" expression • ";" assign_statement_or_empty ")" statement_or_block_of_statements

    ";"  shift, and go to state 240


State 239

   91 variable: "identifier" "[" expression "]" "." "identifier" •

    $default  reduce using rule 91 (variable)


State 240

   78 for_statement: "for" "(" assign_statement_or_empty ";" expression ";" • assign_statement_or_empty ")" statement_or_block_of_statements

    "identifier"  shift, and go to state 92

    $default  reduce using rule 82 (assign_statement_or_empty)

    assign_statement_or_empty  go to state 241
    assign_statement           go to state 211
    variable                   go to state 122


State 241

   78 for_statement: "for" "(" assign_statement_or_empty ";" expression ";" assign_statement_or_empty • ")" statement_or_block_of_statements

    ")"  shift, and go to state 242


State 242

   78 for_statement: "for" "(" assign_statement_or_empty ";" expression ";" assign_statement_or_empty ")" • statement_or_block_of_statements

    "if"          shift, and go to state 110
    "for"         shift, and go to state 111
    "exit"        shift, and go to state 112
    "print"       shift, and go to state 113
    "{"           shift, and go to state 43
    "identifier"  shift, and go to state 92

    statement_or_block_of_statements  go to state 243
    statement_block                   go to state 236
    statement                         go to state 237
    if_statement                      go to state 117
    for_statement                     go to state 118
    print_statement                   go to state 119
    exit_statement                    go to state 120
    assign_statement                  go to state 121
    variable                          go to state 122


State 243

   78 for_statement: "for" "(" assign_statement_or_empty ";" expression ";" assign_statement_or_empty ")" statement_or_block_of_statements •

    $default  reduce using rule 78 (for_statement)
