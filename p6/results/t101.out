gpl.cpp::main()
  input file(tests/t101.gpl)
  random seed(42)
  read_keypresses_from_standard_input(false)
  dump_pixels(false)
  symbol_table(true)
  graphics(true)

gpl.cpp::main() Calling yyparse()

animation_declaration starts
animation_declaration ends
finish animation block

gpl.cpp::main() after call to yyparse().


Printing the symbol table from main()
int i = 0
animation code move
circle my_circle
{
    animation_block = move,
    blue = double(0.678),
    drawing_order = int(0),
    green = double(0.345),
    h = int(20),
    proximity = int(4),
    radius = int(10),
    red = double(0.123),
    user_double = double(0),
    user_double2 = double(0),
    user_double3 = double(0),
    user_double4 = double(0),
    user_double5 = double(0),
    user_int = int(0),
    user_int2 = int(0),
    user_int3 = int(0),
    user_int4 = int(0),
    user_int5 = int(0),
    user_string = string(""),
    user_string2 = string(""),
    user_string3 = string(""),
    user_string4 = string(""),
    user_string5 = string(""),
    visible = int(1),
    w = int(20),
    x = int(0),
    y = int(100)
}
string window_title = "Having fun running animations"
gpl.cpp::main() Calling window->initialize().


gpl.cpp::main() Passing control to window->main_loop().
print[53]: my_circle.x = 0
print[54]: my_circle.y = 100
print[55]: my_circle.red = 0.123000
print[56]: my_circle.green = 0.345000
print[57]: my_circle.blue = 0.678000
gpl[48]: exit(33)
